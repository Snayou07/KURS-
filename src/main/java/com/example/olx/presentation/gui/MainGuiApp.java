package com.example.olx.presentation.gui;

import com.example.olx.application.command.AdCommandManager;
import com.example.olx.application.command.CommandFactory;
import com.example.olx.application.command.CommandInvoker;
import com.example.olx.application.service.impl.AdServiceImpl;
import com.example.olx.application.service.impl.CategoryServiceImpl;
import com.example.olx.application.service.impl.UserServiceImpl;
import com.example.olx.application.service.port.AdServicePort;
import com.example.olx.application.service.port.CategoryServicePort;
import com.example.olx.application.service.port.NotificationServicePort;
import com.example.olx.application.service.port.UserService;
import com.example.olx.application.service.strategy.AdSearchStrategy;
import com.example.olx.application.service.strategy.DefaultAdSearchStrategy;
import com.example.olx.domain.model.Ad;
import com.example.olx.domain.model.AdState;
import com.example.olx.domain.model.Category;
import com.example.olx.domain.model.CategoryComponent;
import com.example.olx.domain.repository.AdRepository;
import com.example.olx.domain.repository.CategoryRepository;
import com.example.olx.domain.repository.UserRepository;
import com.example.olx.infrastructure.notification.ConsoleNotificationServiceImpl;
import com.example.olx.infrastructure.persistence.FileAdRepositoryImpl;
import com.example.olx.infrastructure.persistence.FileCategoryRepositoryImpl;
import com.example.olx.infrastructure.persistence.FileUserRepositoryImpl;
import com.example.olx.infrastructure.persistence.SessionManager;
import com.example.olx.infrastructure.security.DemoPasswordHasherImpl;
import com.example.olx.infrastructure.security.PasswordHasher;
import com.example.olx.presentation.gui.controller.AdDetailController;
import com.example.olx.presentation.gui.controller.CreateAdController;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
public class MainGuiApp extends Application {

    private static Stage primaryStage;
    // –°–µ—Ä–≤—ñ—Å–∏
    public static UserService userService;
    public static AdServicePort adService;
    public static CategoryServicePort categoryService;
    public static SessionManager sessionManager;

    // Command –ø–∞—Ç—Ç–µ—Ä–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    public static AdCommandManager adCommandManager;
    public static CommandInvoker commandInvoker;
    public static CommandFactory commandFactory;


    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑ –±–∞–∑–æ–≤–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
     */
    public static void loadAdDetailScene(Ad ad) throws IOException {
        // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ñ–≤, —è–∫—â–æ AdDetailController —Ü–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î
        loadAdDetailSceneWithAutoDecorators(ad);
    }


    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ñ–≤
     */
    public static void loadAdDetailSceneWithAutoDecorators(Ad ad) throws IOException {
        URL fxmlLocation = MainGuiApp.class.getResource("/com/example/olx/presentation/gui/view/AdDetailView.fxml");
        if (fxmlLocation == null) {
            throw new IOException("Cannot find FXML file: AdDetailView.fxml. Path: /com/example/olx/presentation/gui/view/AdDetailView.fxml");
        }
        FXMLLoader fxmlLoader = new FXMLLoader(fxmlLocation);
        Parent root = fxmlLoader.load();
        AdDetailController controller = fxmlLoader.getController();

        if (controller == null) {
            throw new IOException("Controller for AdDetailView.fxml is null. Check fx:controller attribute in FXML.");
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –º–∞—î –º–µ—Ç–æ–¥ initDataWithAutoDecorators
        // –¶–µ–π –ø—ñ–¥—Ö—ñ–¥ –∑ —Ä–µ—Ñ–ª–µ–∫—Å—ñ—î—é –Ω–µ –Ω–∞–π–∫—Ä–∞—â–∏–π, –∫—Ä–∞—â–µ –º–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–±–æ –±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä—ñ–≤
        if (hasAutoDecoratorsMethod(controller)) {
            controller.initDataWithAutoDecorators(ad);
        } else {
            // Fallback –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É
            controller.initData(ad); // –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ initData(Ad ad) –∑–∞–≤–∂–¥–∏ —ñ—Å–Ω—É—î
        }

        Scene scene = primaryStage.getScene();
        if (scene == null) {
            scene = new Scene(root, 800, 650); // –†–æ–∑–º—ñ—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
            primaryStage.setScene(scene);
        } else {
            scene.setRoot(root);
        }
        primaryStage.setTitle("–î–µ—Ç–∞–ª—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è: " + (ad != null ? ad.getTitle() : "–ù–µ–≤—ñ–¥–æ–º–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è"));
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑ –ø–æ–≤–Ω–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ñ–≤
     * –¶–µ–π –º–µ—Ç–æ–¥ –º–æ–∂–µ –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º, —è–∫—â–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∏ –≤–∏–∑–Ω–∞—á–∞—é—Ç—å—Å—è –Ω–µ –ª–∏—à–µ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ —Å–∞–º–æ–≥–æ Ad.
     */
    public static void loadAdDetailSceneWithDecorators(Ad ad, boolean isPremium, boolean isUrgent,
                                                       Double discountPercentage, String discountReason,
                                                       Integer warrantyMonths, String warrantyType,
                                                       Boolean freeDelivery, Double deliveryCost, String deliveryInfo) throws IOException {
        URL fxmlLocation = MainGuiApp.class.getResource("/com/example/olx/presentation/gui/view/AdDetailView.fxml");
        if (fxmlLocation == null) {
            throw new IOException("Cannot find FXML file: AdDetailView.fxml. Path: /com/example/olx/presentation/gui/view/AdDetailView.fxml");
        }
        FXMLLoader fxmlLoader = new FXMLLoader(fxmlLocation);
        Parent root = fxmlLoader.load();
        AdDetailController controller = fxmlLoader.getController();

        if (controller == null) {
            throw new IOException("Controller for AdDetailView.fxml is null. Check fx:controller attribute in FXML.");
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –º–∞—î –º–µ—Ç–æ–¥ –∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏
        if (hasDecoratorsMethod(controller)) {
            controller.initData(ad, isPremium, isUrgent, discountPercentage, discountReason,
                    warrantyMonths, warrantyType, freeDelivery, deliveryCost, deliveryInfo);
        } else {
            // Fallback –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É
            controller.initData(ad);
            System.out.println("Warning: AdDetailController doesn't support explicit decorators via initData overload, using basic initialization.");
        }

        Scene scene = primaryStage.getScene();
        if (scene == null) {
            scene = new Scene(root, 800, 650);
            primaryStage.setScene(scene);
        } else {
            scene.setRoot(root);
        }

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ–∫–æ—Ä–æ–≤–∞–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≤—ñ–∫–Ω–∞
        String windowTitle = "–î–µ—Ç–∞–ª—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è: " + (ad != null ? ad.getTitle() : "–ù–µ–≤—ñ–¥–æ–º–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è");
        if (isPremium) windowTitle = "‚≠ê " + windowTitle;
        if (isUrgent) windowTitle = "üö® " + windowTitle;

        primaryStage.setTitle(windowTitle);
    }

    /**
     * –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –¥–µ–∫–æ—Ä–æ–≤–∞–Ω–æ–≥–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è –ø—Ä–µ–º—ñ—É–º —Ç–æ–≤–∞—Ä—ñ–≤
     */
    public static void loadPremiumAdDetailScene(Ad ad) throws IOException {
        loadAdDetailSceneWithDecorators(ad, true, false, null, null,
                12, "–†–æ–∑—à–∏—Ä–µ–Ω–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—è", true, 0.0, "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –µ–∫—Å–ø—Ä–µ—Å-–¥–æ—Å—Ç–∞–≤–∫–∞");
    }

    /**
     * –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –¥–µ–∫–æ—Ä–æ–≤–∞–Ω–æ–≥–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –¥–ª—è —Ç–µ—Ä–º—ñ–Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑—ñ –∑–Ω–∏–∂–∫–æ—é
     */
    public static void loadUrgentDiscountAdDetailScene(Ad ad, double discountPercent) throws IOException {
        loadAdDetailSceneWithDecorators(ad, false, true, discountPercent, "–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂",
                null, null, false, 30.0, "–®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞");
    }


    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Å—Ü–µ–Ω—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è
     */
    public static void loadEditAdScene(Ad adToEdit) throws IOException {
        URL fxmlLocation = MainGuiApp.class.getResource("/com/example/olx/presentation/gui/view/CreateAdView.fxml");
        if (fxmlLocation == null) {
            throw new IOException("Cannot find FXML file: CreateAdView.fxml for editing. Path: /com/example/olx/presentation/gui/view/CreateAdView.fxml");
        }
        FXMLLoader fxmlLoader = new FXMLLoader(fxmlLocation);
        Parent root = fxmlLoader.load();
        CreateAdController controller = fxmlLoader.getController();

        if (controller == null) {
            throw new IOException("Controller for CreateAdView.fxml is null. Check fx:controller attribute in FXML.");
        }
        controller.initDataForEdit(adToEdit);

        Scene scene = primaryStage.getScene();
        if (scene == null) {
            scene = new Scene(root, 700, 600); // –†–æ–∑–º—ñ—Ä–∏ –¥–ª—è —Ñ–æ—Ä–º–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
            primaryStage.setScene(scene);
        } else {
            scene.setRoot(root);
        }
        primaryStage.setTitle("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è: " + (adToEdit != null ? adToEdit.getTitle() : ""));
    }


    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –º–∞—î –º–µ—Ç–æ–¥ initDataWithAutoDecorators(Ad ad)
     */
    private static boolean hasAutoDecoratorsMethod(AdDetailController controller) {
        if (controller == null) return false;
        try {
            controller.getClass().getMethod("initDataWithAutoDecorators", Ad.class);
            return true;
        } catch (NoSuchMethodException e) {
            return false;
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –º–∞—î –º–µ—Ç–æ–¥ initData –∑ —É—Å—ñ–º–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ñ–≤
     */
    private static boolean hasDecoratorsMethod(AdDetailController controller) {
        if (controller == null) return false;
        try {
            controller.getClass().getMethod("initData", Ad.class, boolean.class, boolean.class,
                    Double.class, String.class, Integer.class, String.class,
                    Boolean.class, Double.class, String.class);
            return true;
        } catch (NoSuchMethodException e) {
            return false;
        }
    }

    @Override
    public void init() throws Exception {
        super.init(); // –í–∞–∂–ª–∏–≤–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ super.init()
        System.out.println("Initializing backend services...");
// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ SessionManager
        sessionManager = SessionManager.getInstance();
        sessionManager.setStorageFilePath("olx_gui_data.dat"); // –ù–∞–∑–≤–∞ —Ñ–∞–π–ª—É –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω
        sessionManager.loadState();
        System.out.println("Session state loaded successfully.");

        PasswordHasher passwordHasher = new DemoPasswordHasherImpl();
// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó
        UserRepository userRepository = new FileUserRepositoryImpl(sessionManager);
        CategoryRepository categoryRepository = new FileCategoryRepositoryImpl(sessionManager);
        AdRepository adRepository = new FileAdRepositoryImpl(sessionManager);

        // –ü—Ä–∏–∫–ª–∞–¥ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó NotificationService, —è–∫—â–æ AdState –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω–æ
        NotificationServicePort notificationService = new ConsoleNotificationServiceImpl() {
            @Override
            public void notifyAdStateChanged(Ad ad, AdState newState) {
                // System.out.println("Ad " + ad.getId() + " state changed to " + newState);
            }
        };
        AdSearchStrategy adSearchStrategy = new DefaultAdSearchStrategy();

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Ä–≤—ñ—Å–∏
        userService = new UserServiceImpl(userRepository, passwordHasher);
        categoryService = new CategoryServiceImpl(categoryRepository);
        adService = new AdServiceImpl(adRepository, userRepository, categoryRepository, notificationService, adSearchStrategy);
// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Command –ø–∞—Ç—Ç–µ—Ä–Ω—É
        commandInvoker = new CommandInvoker();
        commandFactory = new CommandFactory(adService); // –ü–µ—Ä–µ–¥–∞—î–º–æ –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π adService
        adCommandManager = new AdCommandManager(commandInvoker, commandFactory);

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (—è–∫—â–æ —ó—Ö —â–µ –Ω–µ–º–∞—î)
        initializeDefaultCategories();
        System.out.println("Backend services initialized successfully.");
    }

    @Override
    public void start(Stage stage) throws IOException {
        primaryStage = stage;
        primaryStage.setTitle("OLX-–¥–æ—à–∫–∞ –æ–≥–æ–ª–æ—à–µ–Ω—å");
        loadLoginScene(); // –ü–æ—á–∏–Ω–∞—î–º–æ –∑ –µ–∫—Ä–∞–Ω—É –ª–æ–≥—ñ–Ω—É
        primaryStage.show();
    }

    public static void loadLoginScene() throws IOException {
        loadScene("/com/example/olx/presentation/gui/view/LoginView.fxml", "–í—Ö—ñ–¥ / –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è", 600, 400);
    }

    public static void loadMainScene() throws IOException {
        loadScene("/com/example/olx/presentation/gui/view/MainView.fxml", "–ì–æ–ª–æ–≤–Ω–∞ - OLX", 1200, 800);
    }

    public static void loadCreateAdScene() throws IOException {
        loadScene("/com/example/olx/presentation/gui/view/CreateAdView.fxml", "–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è - OLX", 700, 650);
    }

    private static void loadScene(String fxmlFile, String title, double width, double height) throws IOException {
        System.out.println("Attempting to load FXML: " + fxmlFile);
        URL fxmlLocation = MainGuiApp.class.getResource(fxmlFile);

        // –í–∏–¥–∞–ª–µ–Ω–æ —Å–ø—Ä–æ–±—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —à–ª—è—Ö—É, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —á–∞—Å—Ç–æ –≤–∫–∞–∑—É—î –Ω–∞ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é –ø—Ä–æ–µ–∫—Ç—É.
        // FXML —Ñ–∞–π–ª–∏ –º–∞—é—Ç—å –±—É—Ç–∏ –≤ classpath —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ –ø–∞–ø–æ–∫.
        if (fxmlLocation == null) {
            throw new IOException("Cannot find FXML file at: " + fxmlFile +
                    ". Make sure FXML files are in the correct resources directory and the path starts with '/' and reflects the package structure.");
        }
        System.out.println("Found FXML at: " + fxmlLocation);

        FXMLLoader fxmlLoader = new FXMLLoader(fxmlLocation);
        Parent root = fxmlLoader.load();
        Scene scene = primaryStage.getScene();
        if (scene == null) {
            scene = new Scene(root, width, height);
            primaryStage.setScene(scene);
        } else {
            scene.setRoot(root);
            // –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä —Å—Ü–µ–Ω–∏, —è–∫—â–æ –≤—ñ–Ω –∑–º—ñ–Ω–∏–≤—Å—è
            // primaryStage.setWidth(width);
            // primaryStage.setHeight(height);
        }
        primaryStage.setTitle(title);
    }
    // –ü–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ, —è–∫—â–æ —Ä–æ–∑–º—ñ—Ä–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ
    private static void loadScene(String fxmlFile, String title) throws IOException {
        loadScene(fxmlFile, title, 800, 600); // –†–æ–∑–º—ñ—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    }


    @Override
    public void stop() throws Exception {
        System.out.println("Application stopping. Saving session state...");
        if (sessionManager != null) {
            sessionManager.saveState();
            System.out.println("Session state saved successfully.");
        }
        super.stop(); // –í–∞–∂–ª–∏–≤–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ super.stop()
    }

    private static void initializeDefaultCategories() {
        if (categoryService == null) {
            System.err.println("CategoryService is not initialized. Cannot initialize default categories.");
            return;
        }
        try {
            List<CategoryComponent> existingCategories = categoryService.getAllRootCategories();
            if (existingCategories != null && !existingCategories.isEmpty()) {
                System.out.println("Categories already exist (" + existingCategories.size() + " root categories found), skipping initialization.");
// –ü—Ä–æ–±–ª–µ–º–∞ [cite: 386] —Ç—É—Ç –º–æ–∂–µ –±—É—Ç–∏, —è–∫—â–æ getAllRootCategories() –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ,
                // –∞–±–æ —è–∫—â–æ –¥–∞–Ω—ñ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ. –ü–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –Ω–∞–¥—ñ–π–Ω—ñ—Å—Ç—å categoryService.
                return;
            }

            System.out.println("Initializing default categories...");
            List<CategoryComponent> rootCategoriesToInitialize = new ArrayList<>();

            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Category(id, name, parentId)
            // –î–ª—è –∫–æ—Ä–µ–Ω–µ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π parentId –º–∞—î –±—É—Ç–∏ null.
            Category electronics = new Category("electronics", "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", null);
            // –î–æ–¥–∞–º–æ –∫—ñ–ª—å–∫–∞ –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–ª—è –ø—Ä–∏–∫–ª–∞–¥—É (—è–∫—â–æ –≤–∞—à Category —Ü–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î)
            // Category phones = new Category("phones", "–¢–µ–ª–µ—Ñ–æ–Ω–∏", "electronics");
            // Category computers = new Category("computers", "–ö–æ–º–ø'—é—Ç–µ—Ä–∏", "electronics");
            // electronics.addChild(phones); // –Ø–∫—â–æ —î —Ç–∞–∫–∏–π –º–µ—Ç–æ–¥
            // electronics.addChild(computers);
            rootCategoriesToInitialize.add(electronics);

            Category clothing = new Category("clothing", "–û–¥—è–≥ —ñ –≤–∑—É—Ç—Ç—è", null);
            rootCategoriesToInitialize.add(clothing);

            Category home = new Category("home", "–î—ñ–º —ñ —Å–∞–¥", null);
            rootCategoriesToInitialize.add(home);

            Category auto = new Category("auto", "–ê–≤—Ç–æ", null);
            rootCategoriesToInitialize.add(auto);

            Category sport = new Category("sport", "–°–ø–æ—Ä—Ç —ñ —Ö–æ–±—ñ", null);
            rootCategoriesToInitialize.add(sport);

            // –ü–µ—Ä–µ–¥–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –ö–û–†–ï–ù–ï–í–ò–• –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.
            // –ú–µ—Ç–æ–¥ initializeCategories –º–∞—î –æ–±—Ä–æ–±–∏—Ç–∏ —ó—Ö —Ç–∞ —ó—Ö–Ω—ñ –¥–æ—á—ñ—Ä–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—â–æ —Ç–∞–∫—ñ —î.
            categoryService.initializeCategories(rootCategoriesToInitialize);
            System.out.println("Default categories initialization requested for " + rootCategoriesToInitialize.size() + " root categories.");

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å–ø—Ä–∞–≤–¥—ñ –¥–æ–¥–∞–ª–∏—Å—è
            List<CategoryComponent> checkCategories = categoryService.getAllRootCategories();
            System.out.println("Categories after initialization attempt: " +
                    (checkCategories != null ? checkCategories.size() + " root categories found." : "null (service error)"));
        } catch (Exception e) { // –õ–æ–≤–∏–º–æ –±—É–¥—å-—è–∫—ñ –≤–∏–Ω—è—Ç–∫–∏ –ø—ñ–¥ —á–∞—Å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            System.err.println("Error initializing default categories: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–º–∞–Ω–¥ –∑ GUI (–±–µ–∑ –∑–º—ñ–Ω)
    public static AdCommandManager getAdCommandManager() {
        return adCommandManager;
    }

    public static CommandInvoker getCommandInvoker() {
        return commandInvoker;
    }

    public static void main(String[] args) {
        launch(args);
    }
}